@model List<HotelComandasEletronicas.Models.LancamentoConsumo>
@{
    ViewData["Title"] = "Histórico de Lançamentos - Sistema de Comandas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="perfil-header perfil-recepcao mb-4">
            <h2 class="mb-2">
                <i class="fas fa-history me-3"></i>
                Histórico de Lançamentos
            </h2>
            <p class="mb-0 fs-5">Consulta e gerenciamento de lançamentos</p>
        </div>
    </div>
</div>

<!-- Filtros -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-filter me-2"></i>
                    Filtros de Pesquisa
                </h5>
            </div>
            <div class="card-body">
                <form method="get" class="row g-3">
                    <div class="col-md-3">
                        <label for="inicio" class="form-label">Data Início</label>
                        <input type="date" id="inicio" name="inicio" class="form-control" 
                               value="@(ViewBag.DataInicio?.ToString("yyyy-MM-dd"))" />
                    </div>
                    <div class="col-md-3">
                        <label for="fim" class="form-label">Data Fim</label>
                        <input type="date" id="fim" name="fim" class="form-control" 
                               value="@(ViewBag.DataFim?.ToString("yyyy-MM-dd"))" />
                    </div>
                    <div class="col-md-3">
                        <label for="usuario" class="form-label">Usuário</label>
                        <input type="text" id="usuario" name="usuario" class="form-control" 
                               placeholder="Código do usuário" value="@ViewBag.UsuarioFiltro" />
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search me-1"></i>Filtrar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Estatísticas Rápidas -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card text-center">
            <div class="card-body">
                <div class="text-primary mb-2">
                    <i class="fas fa-receipt fa-2x"></i>
                </div>
                <h5 class="card-title">Total</h5>
                <h3 class="text-primary">@Model.Count</h3>
                <small class="text-muted">Lançamentos</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card text-center">
            <div class="card-body">
                <div class="text-success mb-2">
                    <i class="fas fa-check-circle fa-2x"></i>
                </div>
                <h5 class="card-title">Ativos</h5>
                <h3 class="text-success">@Model.Count(l => l.IsAtivo())</h3>
                <small class="text-muted">Lançamentos</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card text-center">
            <div class="card-body">
                <div class="text-danger mb-2">
                    <i class="fas fa-ban fa-2x"></i>
                </div>
                <h5 class="card-title">Cancelados</h5>
                <h3 class="text-danger">@Model.Count(l => !l.IsAtivo())</h3>
                <small class="text-muted">Lançamentos</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card text-center">
            <div class="card-body">
                <div class="text-warning mb-2">
                    <i class="fas fa-dollar-sign fa-2x"></i>
                </div>
                <h5 class="card-title">Valor Total</h5>
                <h3 class="text-warning">@Model.Where(l => l.IsAtivo()).Sum(l => l.ValorTotal).ToString("C2")</h3>
                <small class="text-muted">Período filtrado</small>
            </div>
        </div>
    </div>
</div>

<!-- Ações Rápidas -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-secondary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-tools me-2"></i>
                    Ações Disponíveis
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 mb-2">
                        <a href="/lancamento" class="btn btn-success w-100">
                            <i class="fas fa-plus me-2"></i>
                            Novo Lançamento
                        </a>
                    </div>
                    <div class="col-lg-4 mb-2">
                        <button type="button" class="btn btn-info w-100" onclick="exportarDados()">
                            <i class="fas fa-download me-2"></i>
                            Exportar Dados
                        </button>
                    </div>
                    <div class="col-lg-4 mb-2">
                        <button type="button" class="btn btn-warning w-100" onclick="atualizarPagina()">
                            <i class="fas fa-sync-alt me-2"></i>
                            Atualizar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Tabela de Lançamentos -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-list me-2"></i>
                    Lançamentos (@Model.Count)
                </h5>
            </div>
            <div class="card-body">
                @if (Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Data/Hora</th>
                                    <th>Quarto</th>
                                    <th>Cliente</th>
                                    <th>Produto</th>
                                    <th>Qtd</th>
                                    <th>Valor Unit.</th>
                                    <th>Total</th>
                                    <th>Usuário</th>
                                    <th>Status</th>
                                    <th class="text-center">Ações</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var lancamento in Model.OrderByDescending(l => l.DataHoraLancamento))
                                {
                                    <tr class="@(lancamento.IsAtivo() ? "" : "table-secondary opacity-75")">
                                        <td>
                                            <small>@lancamento.FormatarDataHora()</small>
                                        </td>
                                        <td>
                                            <strong class="badge bg-primary">@lancamento.RegistroHospede?.NumeroQuarto</strong>
                                        </td>
                                        <td>
                                            @lancamento.RegistroHospede?.NomeCliente
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <i class="@(lancamento.Produto?.IsCategoria("Bebidas") == true ? "fas fa-glass-whiskey text-info" : 
                                                          lancamento.Produto?.IsCategoria("Comidas") == true ? "fas fa-utensils text-warning" : 
                                                          "fas fa-concierge-bell text-success") me-2"></i>
                                                @lancamento.Produto?.Descricao
                                            </div>
                                            @if (!string.IsNullOrWhiteSpace(lancamento.ObservacoesCancelamento) && !lancamento.IsAtivo())
                                            {
                                                <small class="text-muted d-block">
                                                    <i class="fas fa-comment me-1"></i>@lancamento.ObservacoesCancelamento
                                                </small>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@lancamento.FormatarQuantidade()</span>
                                        </td>
                                        <td>
                                            @lancamento.ValorUnitario.ToString("C2")
                                        </td>
                                        <td>
                                            <strong class="@(lancamento.IsAtivo() ? "text-success" : "text-muted")">
                                                @lancamento.FormatarValorTotal()
                                            </strong>
                                        </td>
                                        <td>
                                            <code>@lancamento.CodigoUsuarioLancamento</code>
                                        </td>
                                        <td>
                                            @if (lancamento.IsAtivo())
                                            {
                                                <span class="badge bg-success">
                                                    <i class="fas fa-check me-1"></i>Ativo
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">
                                                    <i class="fas fa-ban me-1"></i>Cancelado
                                                </span>
                                                @if (!string.IsNullOrWhiteSpace(lancamento.ObservacoesCancelamento))
                                                {
                                                    <small class="text-muted d-block">
                                                        <i class="fas fa-info-circle me-1"></i>@lancamento.ObservacoesCancelamento
                                                    </small>
                                                }
                                            }
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group btn-group-sm" role="group">
                                                <button type="button" 
                                                        class="btn btn-outline-info" 
                                                        onclick="verDetalhes(@lancamento.ID)"
                                                        title="Ver detalhes">
                                                    <i class="fas fa-eye"></i>
                                                </button>

                                                @if (lancamento.IsAtivo() && ViewBag.UsuarioEhRecepcaoOuSupervisor == true)
                                                {
                                                    <button type="button" 
                                                            class="btn btn-outline-danger" 
                                                            onclick="cancelarLancamento(@lancamento.ID, '@lancamento.Produto?.Descricao', '@lancamento.RegistroHospede?.NumeroQuarto')"
                                                            title="Cancelar lançamento">
                                                        <i class="fas fa-ban"></i>
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-receipt fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">Nenhum lançamento encontrado</h5>
                        <p class="text-muted">Ajuste os filtros ou adicione novos lançamentos.</p>
                        <a href="/lancamento" class="btn btn-success">
                            <i class="fas fa-plus me-2"></i>
                            Adicionar Primeiro Lançamento
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal para cancelamento -->
<div class="modal fade" id="modalCancelar" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="fas fa-ban me-2"></i>
                    Cancelar Lançamento
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Atenção:</strong> Esta ação não pode ser desfeita. O valor será deduzido da conta do hóspede.
                </div>
                
                <div class="mb-3">
                    <strong>Lançamento:</strong> <span id="detalhesCancelamento"></span>
                </div>

                <div class="mb-3">
                    <label for="motivoCancelamento" class="form-label">Motivo do Cancelamento *</label>
                    <textarea id="motivoCancelamento" class="form-control" rows="3" 
                              placeholder="Descreva o motivo do cancelamento..." required></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" onclick="confirmarCancelamento()">
                    <i class="fas fa-ban me-1"></i>
                    Confirmar Cancelamento
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let lancamentoParaCancelar = 0;

        // Cancelar lançamento
        function cancelarLancamento(id, produto, quarto) {
            lancamentoParaCancelar = id;
            document.getElementById('detalhesCancelamento').textContent = `${produto} - Quarto ${quarto}`;
            document.getElementById('motivoCancelamento').value = '';
            
            new bootstrap.Modal(document.getElementById('modalCancelar')).show();
        }

        // Confirmar cancelamento
        function confirmarCancelamento() {
            const motivo = document.getElementById('motivoCancelamento').value.trim();
            
            if (!motivo) {
                alert('Por favor, informe o motivo do cancelamento.');
                return;
            }

            if (motivo.length < 5) {
                alert('O motivo deve ter pelo menos 5 caracteres.');
                return;
            }

            const formData = new FormData();
            formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);
            formData.append('motivo', motivo);

            fetch(`/lancamento/cancelar/${lancamentoParaCancelar}`, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.sucesso) {
                    alert(data.mensagem);
                    location.reload();
                } else {
                    alert(`Erro: ${data.mensagem}`);
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao cancelar lançamento. Tente novamente.');
            });

            bootstrap.Modal.getInstance(document.getElementById('modalCancelar')).hide();
        }

        // Ver detalhes (implementação futura)
        function verDetalhes(id) {
            alert(`Funcionalidade de detalhes será implementada. ID: ${id}`);
        }

        // Exportar dados (implementação futura)
        function exportarDados() {
            alert('Funcionalidade de exportação será implementada em breve.');
        }

        // Atualizar página
        function atualizarPagina() {
            location.reload();
        }

        // Aplicar filtros automaticamente quando mudar data
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('input[type="date"]');
            inputs.forEach(input => {
                input.addEventListener('change', function() {
                    // Auto-submit após 1 segundo de inatividade
                    setTimeout(() => {
                        if (document.getElementById('inicio').value && document.getElementById('fim').value) {
                            document.querySelector('form').submit();
                        }
                    }, 1000);
                });
            });
        });
    </script>
}

@{
    // Token para requisições AJAX
    @Html.AntiForgeryToken()
}