@model List<HotelComandasEletronicas.Models.RegistroHospede>
@{
    ViewData["Title"] = "Gestão de Hóspedes - Sistema de Comandas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="perfil-header perfil-recepcao mb-4">
            <h2 class="mb-2">
                <i class="fas fa-users me-3"></i>
                Gestão de Hóspedes
            </h2>
            <p class="mb-0 fs-5">Registro e controle de hospedagem</p>
        </div>
    </div>
</div>

<!-- Filtros e Busca -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-search me-2"></i>
                    Busca e Filtros
                </h5>
            </div>
            <div class="card-body">
                <form method="get" class="row g-3">
                    <div class="col-md-6">
                        <label for="busca" class="form-label">Busca Inteligente</label>
                        <input type="text" id="busca" name="busca" class="form-control" 
                               placeholder="Digite quarto, nome ou telefone..." 
                               value="@ViewBag.Busca" />
                        <div class="form-text">
                            <i class="fas fa-lightbulb me-1"></i>
                            Ex: "101", "João", "(95) 99999-1234"
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label for="status" class="form-label">Status</label>
                        <select id="status" name="status" class="form-select">
                            <option value="">Todos</option>
                            <option value="Ativo" selected="@(ViewBag.Status == "Ativo" ? "selected" : null)">Ativos</option>
                            <option value="Finalizado" selected="@(ViewBag.Status == "Finalizado" ? "selected" : null)">Finalizados</option>
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search me-1"></i>Buscar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Estatísticas Rápidas -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card text-center">
            <div class="card-body">
                <div class="text-primary mb-2">
                    <i class="fas fa-users fa-2x"></i>
                </div>
                <h5 class="card-title">Total</h5>
                <h3 class="text-primary">@Model.Count</h3>
                <small class="text-muted">Hóspedes</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card text-center">
            <div class="card-body">
                <div class="text-success mb-2">
                    <i class="fas fa-bed fa-2x"></i>
                </div>
                <h5 class="card-title">Ativos</h5>
                <h3 class="text-success">@Model.Count(r => r.IsAtivo())</h3>
                <small class="text-muted">Hospedados</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card text-center">
            <div class="card-body">
                <div class="text-secondary mb-2">
                    <i class="fas fa-check-circle fa-2x"></i>
                </div>
                <h5 class="card-title">Finalizados</h5>
                <h3 class="text-secondary">@Model.Count(r => !r.IsAtivo())</h3>
                <small class="text-muted">Check-outs</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card text-center">
            <div class="card-body">
                <div class="text-warning mb-2">
                    <i class="fas fa-dollar-sign fa-2x"></i>
                </div>
                <h5 class="card-title">Valor Total</h5>
                <h3 class="text-warning">@Model.Where(r => r.IsAtivo()).Sum(r => r.ValorGastoTotal).ToString("C2")</h3>
                <small class="text-muted">Ativos</small>
            </div>
        </div>
    </div>
</div>

<!-- Ações Rápidas -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-secondary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-tools me-2"></i>
                    Ações Disponíveis
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 mb-2">
                        <a href="/registro/cadastrar" class="btn btn-success w-100">
                            <i class="fas fa-plus me-2"></i>
                            Novo Check-in
                        </a>
                    </div>
                    <div class="col-lg-4 mb-2">
                        <button type="button" class="btn btn-info w-100" onclick="atualizarPagina()">
                            <i class="fas fa-sync-alt me-2"></i>
                            Atualizar Lista
                        </button>
                    </div>
                    <div class="col-lg-4 mb-2">
                        <button type="button" class="btn btn-warning w-100" onclick="exportarDados()">
                            <i class="fas fa-download me-2"></i>
                            Exportar Dados
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Lista de Hóspedes -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-list me-2"></i>
                    Hóspedes (@Model.Count)
                </h5>
            </div>
            <div class="card-body">
                @if (Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Quarto</th>
                                    <th>Cliente</th>
                                    <th>Telefone</th>
                                    <th>Check-in</th>
                                    <th>Valor Gasto</th>
                                    <th>Status</th>
                                    <th>Usuário</th>
                                    <th class="text-center">Ações</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var registro in Model.OrderByDescending(r => r.DataRegistro))
                                {
                                    <tr class="@(registro.IsAtivo() ? "" : "table-secondary opacity-75")">
                                        <td>
                                            <strong class="badge @(registro.IsAtivo() ? "bg-primary" : "bg-secondary")">
                                                @registro.NumeroQuarto
                                            </strong>
                                        </td>
                                        <td>
                                            <div>
                                                <strong>@registro.NomeCliente</strong>
                                                @if (registro.IsAtivo() && registro.ValorGastoTotal > 0)
                                                {
                                                    <span class="badge bg-info ms-2">Com consumo</span>
                                                }
                                            </div>
                                        </td>
                                        <td>
                                            @registro.TelefoneCliente
                                        </td>
                                        <td>
                                            <small>@registro.DataRegistro.ToString("dd/MM/yyyy HH:mm")</small>
                                        </td>
                                        <td>
                                            <strong class="@(registro.ValorGastoTotal > 0 ? "text-success" : "text-muted")">
                                                @registro.ValorGastoTotal.ToString("C2")
                                            </strong>
                                        </td>
                                        <td>
                                            @if (registro.IsAtivo())
                                            {
                                                <span class="badge bg-success">
                                                    <i class="fas fa-bed me-1"></i>Hospedado
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">
                                                    <i class="fas fa-check-circle me-1"></i>Check-out
                                                </span>
                                            }
                                        </td>
                                        <td>
                                            <code>@registro.UsuarioRegistro</code>
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group btn-group-sm" role="group">
                                                <a href="/registro/detalhes/@registro.ID" 
                                                   class="btn btn-outline-info" 
                                                   title="Ver detalhes">
                                                    <i class="fas fa-eye"></i>
                                                </a>

                                                @if (registro.IsAtivo())
                                                {
                                                    <a href="/registro/editar/@registro.ID" 
                                                       class="btn btn-outline-warning" 
                                                       title="Editar dados">
                                                        <i class="fas fa-edit"></i>
                                                    </a>

                                                    <button type="button" 
                                                            class="btn btn-outline-danger" 
                                                            onclick="finalizarRegistro(@registro.ID, '@registro.NomeCliente', '@registro.NumeroQuarto', @registro.ValorGastoTotal)"
                                                            title="Finalizar hospedagem">
                                                        <i class="fas fa-sign-out-alt"></i>
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">Nenhum hóspede encontrado</h5>
                        <p class="text-muted">
                            @if (!string.IsNullOrWhiteSpace(ViewBag.Busca as string) || !string.IsNullOrWhiteSpace(ViewBag.Status as string))
                            {
                                <span>Ajuste os filtros ou </span>
                            }
                            <span>registre o primeiro hóspede.</span>
                        </p>
                        <a href="/registro/cadastrar" class="btn btn-success">
                            <i class="fas fa-plus me-2"></i>
                            Registrar Primeiro Hóspede
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal para finalização -->
<div class="modal fade" id="modalFinalizar" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">
                    <i class="fas fa-sign-out-alt me-2"></i>
                    Finalizar Hospedagem
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    <strong>Atenção:</strong> Esta ação finalizará a hospedagem e liberará o quarto.
                </div>
                
                <div class="mb-3">
                    <strong>Hóspede:</strong> <span id="detalhesFinalizacao"></span>
                </div>

                <div class="mb-3">
                    <strong>Valor Total Gasto:</strong> <span id="valorTotalFinalizacao" class="fs-5 text-success fw-bold"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-warning" onclick="confirmarFinalizacao()">
                    <i class="fas fa-check me-1"></i>
                    Confirmar Check-out
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let registroParaFinalizar = 0;

        // Finalizar registro
        function finalizarRegistro(id, nomeCliente, numeroQuarto, valorTotal) {
            registroParaFinalizar = id;
            document.getElementById('detalhesFinalizacao').textContent = `${nomeCliente} - Quarto ${numeroQuarto}`;
            document.getElementById('valorTotalFinalizacao').textContent = valorTotal.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
            
            new bootstrap.Modal(document.getElementById('modalFinalizar')).show();
        }

        // Confirmar finalização
        function confirmarFinalizacao() {
            // Obter token CSRF corretamente
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || 
                         $('input[name="__RequestVerificationToken"]').val();

            const formData = new FormData();
            formData.append('__RequestVerificationToken', token);

            fetch(`/registro/finalizar/${registroParaFinalizar}`, {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.sucesso) {
                    alert(data.mensagem);
                    window.location.href = '/registro';
                } else {
                    alert(`Erro: ${data.mensagem}`);
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao finalizar registro. Tente novamente.');
            })
            .finally(() => {
                const modal = bootstrap.Modal.getInstance(document.getElementById('modalFinalizar'));
                if (modal) {
                    modal.hide();
                }
            });
        }

        // Exportar dados (implementação futura)
        function exportarDados() {
            alert('Funcionalidade de exportação será implementada em breve.');
        }

        // Atualizar página
        function atualizarPagina() {
            window.location.href = '/registro';
        }

        // Auto-focus no campo de busca ao carregar
        document.addEventListener('DOMContentLoaded', function() {
            const buscaInput = document.getElementById('busca');
            if (buscaInput) {
                // Pequeno delay para evitar interferência
                setTimeout(() => {
                    buscaInput.focus();
                }, 100);
            }
        });
    </script>
}

@{
    // Token CSRF para requisições AJAX
    @Html.AntiForgeryToken()
}