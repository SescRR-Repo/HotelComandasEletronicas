@model HotelComandasEletronicas.ViewModels.RelatorioProdutosViewModel
@{
    ViewData["Title"] = "Relatório de Produtos - Sistema de Comandas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="perfil-header perfil-supervisor mb-4">
            <h2 class="mb-2">
                <i class="fas fa-box me-3"></i>
                Relatório de Produtos
            </h2>
            <p class="mb-0 fs-5">Produtos mais vendidos - @Model.DataInicio.ToString("dd/MM/yyyy") a @Model.DataFim.ToString("dd/MM/yyyy")</p>
            <div class="mt-2">
                <a href="/relatorio" class="btn btn-secondary btn-sm">
                    <i class="fas fa-arrow-left me-1"></i>Voltar ao Dashboard
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Filtros -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-filter me-2"></i>
                    Filtros de Análise
                </h5>
            </div>
            <div class="card-body">
                <form method="get" action="/relatorio/produtos" class="row g-3">
                    <div class="col-md-3">
                        <label for="inicio" class="form-label">Data Início</label>
                        <input type="date" id="inicio" name="inicio" class="form-control" 
                               value="@Model.DataInicio.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-3">
                        <label for="fim" class="form-label">Data Fim</label>
                        <input type="date" id="fim" name="fim" class="form-control" 
                               value="@Model.DataFim.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-3">
                        <label for="categoria" class="form-label">Categoria</label>
                        <select id="categoria" name="categoria" class="form-select">
                            <option value="">Todas as categorias</option>
                            @if (Model.CategoriasDisponiveis?.Any() == true)
                            {
                                @foreach (var cat in Model.CategoriasDisponiveis)
                                {
                                    <option value="@cat" selected="@(cat == Model.CategoriaSelecionada)">@cat</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search me-1"></i>Filtrar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Top 5 Produtos (Cards) -->
@if (Model.ProdutosMaisVendidos?.Any() == true)
{
    <div class="row mb-4">
        <div class="col-12">
            <h4 class="mb-3">
                <i class="fas fa-trophy me-2 text-warning"></i>
                Top 5 Produtos Mais Vendidos
            </h4>
        </div>
        
        @foreach (var produto in Model.ProdutosMaisVendidos.Take(5))
        {
            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                <div class="card h-100 @(produto.Ranking <= 3 ? "border-warning" : "")">
                    <div class="card-header text-center @produto.ObterClasseRanking()">
                        <div class="d-flex justify-content-center align-items-center">
                            <i class="@produto.ObterIconeRanking() fa-2x me-2"></i>
                            <span class="fs-1 fw-bold">#@produto.Ranking</span>
                        </div>
                    </div>
                    <div class="card-body text-center">
                        <h6 class="card-title">@produto.NomeProduto</h6>
                        <span class="badge bg-secondary mb-2">@produto.Categoria</span>
                        <hr>
                        <div class="row text-center">
                            <div class="col-6">
                                <strong class="text-primary d-block">@produto.QuantidadeVendida</strong>
                                <small class="text-muted">Qtd</small>
                            </div>
                            <div class="col-6">
                                <strong class="text-success d-block">@produto.TotalVendas.ToString("C0")</strong>
                                <small class="text-muted">Total</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Tabela Completa de Produtos -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-list me-2"></i>
                        Ranking Completo de Produtos
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th class="text-center">#</th>
                                    <th>Produto</th>
                                    <th>Categoria</th>
                                    <th class="text-center">Qtd Vendida</th>
                                    <th class="text-end">Valor Unit.</th>
                                    <th class="text-end">Total Vendas</th>
                                    <th class="text-center">Lançamentos</th>
                                    <th class="text-end">Ticket Médio</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var produto in Model.ProdutosMaisVendidos)
                                {
                                    <tr class="@produto.ObterClasseRanking()">
                                        <td class="text-center">
                                            <span class="badge @produto.ObterClasseRanking() fs-6">
                                                @produto.Ranking
                                            </span>
                                        </td>
                                        <td>
                                            <strong>@produto.NomeProduto</strong>
                                            @if (produto.Ranking <= 3)
                                            {
                                                <i class="@produto.ObterIconeRanking() ms-1 text-warning"></i>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@produto.Categoria</span>
                                        </td>
                                        <td class="text-center">
                                            <span class="badge bg-primary">@produto.QuantidadeVendida</span>
                                        </td>
                                        <td class="text-end">@produto.ValorUnitario.ToString("C2")</td>
                                        <td class="text-end">
                                            <strong class="text-success">@produto.TotalVendas.ToString("C2")</strong>
                                        </td>
                                        <td class="text-center">@produto.NumeroLancamentos</td>
                                        <td class="text-end">@produto.TicketMedio.ToString("C2")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Vendas por Categoria -->
@if (Model.ProdutosPorCategoria?.Any() == true)
{
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-pie me-2"></i>
                        Distribuição por Categoria
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="graficoCategorias" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-percentage me-2"></i>
                        Análise por Categoria
                    </h5>
                </div>
                <div class="card-body">
                    @foreach (var categoria in Model.ProdutosPorCategoria.OrderByDescending(c => c.TotalVendas))
                    {
                        <div class="mb-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="badge @categoria.ObterClasseBadge()">@categoria.Categoria</span>
                                <strong>@categoria.TotalVendas.ToString("C2")</strong>
                            </div>
                            <div class="progress mt-1" style="height: 10px;">
                                <div class="progress-bar" style="width: @categoria.PercentualVendas.ToString("F1").Replace(",", ".")%"></div>
                            </div>
                            <small class="text-muted">
                                @categoria.QuantidadeLancamentos lançamentos  
                                @categoria.QuantidadeItens itens  
                                @categoria.PercentualVendas.ToString("F1")%
                                <br>
                                <strong>Mais vendido:</strong> @categoria.ProdutoMaisVendido
                            </small>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<!-- Produtos de Categoria Específica -->
@if (!string.IsNullOrWhiteSpace(Model.CategoriaSelecionada) && Model.ProdutosDaCategoria?.Any() == true)
{
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">
                        <i class="fas fa-filter me-2"></i>
                        Produtos da Categoria: @Model.CategoriaSelecionada
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Produto</th>
                                    <th class="text-center">Qtd Vendida</th>
                                    <th class="text-end">Valor Unit.</th>
                                    <th class="text-end">Total Vendas</th>
                                    <th class="text-center">Lançamentos</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var produto in Model.ProdutosDaCategoria)
                                {
                                    <tr>
                                        <td><strong>@produto.NomeProduto</strong></td>
                                        <td class="text-center">
                                            <span class="badge bg-primary">@produto.QuantidadeVendida</span>
                                        </td>
                                        <td class="text-end">@produto.ValorUnitario.ToString("C2")</td>
                                        <td class="text-end">
                                            <strong class="text-success">@produto.TotalVendas.ToString("C2")</strong>
                                        </td>
                                        <td class="text-center">@produto.NumeroLancamentos</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Exportação -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-dark text-white">
                <h5 class="mb-0">
                    <i class="fas fa-download me-2"></i>
                    Exportar Relatório de Produtos
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-2">
                        <button type="button" class="btn btn-success w-100" onclick="exportarExcel()">
                            <i class="fas fa-file-excel me-2"></i>
                            Exportar para Excel
                        </button>
                    </div>
                    <div class="col-md-6 mb-2">
                        <button type="button" class="btn btn-danger w-100" onclick="exportarPdf()">
                            <i class="fas fa-file-pdf me-2"></i>
                            Exportar para PDF
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        // Gráfico de categorias
        @if (Model.ProdutosPorCategoria?.Any() == true)
        {
            <text>
            const ctx = document.getElementById('graficoCategorias').getContext('2d');
            const categoriasChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: [@Html.Raw(string.Join(",", Model.ProdutosPorCategoria.Select(c => $"'{c.Categoria}'")))],
                    datasets: [{
                        data: [@Html.Raw(string.Join(",", Model.ProdutosPorCategoria.Select(c => c.TotalVendas.ToString("F2").Replace(",", "."))))],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.8)',
                            'rgba(54, 162, 235, 0.8)',
                            'rgba(255, 205, 86, 0.8)',
                            'rgba(75, 192, 192, 0.8)',
                            'rgba(153, 102, 255, 0.8)'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = ((context.parsed / total) * 100).toFixed(1);
                                    return context.label + ': R$ ' + context.parsed.toLocaleString('pt-BR') + ' (' + percentage + '%)';
                                }
                            }
                        }
                    }
                }
            });
            </text>
        }

        // Funções de exportação
        function exportarExcel() {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/relatorio/exportarexcel';
            
            const dados = {
                tipoRelatorio: 'produtos',
                inicio: '@Model.DataInicio.ToString("yyyy-MM-dd")',
                fim: '@Model.DataFim.ToString("yyyy-MM-dd")',
                filtros: '@Model.CategoriaSelecionada'
            };

            for (const [key, value] of Object.entries(dados)) {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = key;
                input.value = value;
                form.appendChild(input);
            }

            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            const tokenInput = document.createElement('input');
            tokenInput.type = 'hidden';
            tokenInput.name = '__RequestVerificationToken';
            tokenInput.value = token;
            form.appendChild(tokenInput);

            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }

        function exportarPdf() {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/relatorio/exportarpdf';
            
            const dados = {
                tipoRelatorio: 'produtos',
                inicio: '@Model.DataInicio.ToString("yyyy-MM-dd")',
                fim: '@Model.DataFim.ToString("yyyy-MM-dd")',
                filtros: '@Model.CategoriaSelecionada'
            };

            for (const [key, value] of Object.entries(dados)) {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = key;
                input.value = value;
                form.appendChild(input);
            }

            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            const tokenInput = document.createElement('input');
            tokenInput.type = 'hidden';
            tokenInput.name = '__RequestVerificationToken';
            tokenInput.value = token;
            form.appendChild(tokenInput);

            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }
    </script>
}

@{
    <input name="__RequestVerificationToken" type="hidden" value="@Html.AntiForgeryToken()" />
}