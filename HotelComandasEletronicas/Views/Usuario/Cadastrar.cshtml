@model HotelComandasEletronicas.ViewModels.UsuarioViewModel
@{
    ViewData["Title"] = "Cadastrar Usuário - Sistema de Comandas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="perfil-header perfil-supervisor mb-4">
            <h2 class="mb-2">
                <i class="fas fa-user-plus me-3"></i>
                Cadastrar Novo Usuário
            </h2>
            <p class="mb-0">Preencha os dados do usuário</p>
        </div>
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-lg-8">
        <div class="card shadow-lg">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">
                    <i class="fas fa-form me-2"></i>
                    Formulário de Cadastro
                </h5>
            </div>

            <div class="card-body">
                <!-- Alertas de erro -->
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Corrija os erros abaixo:</strong>
                        <ul class="mb-0 mt-2">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <!-- Instruções -->
                <div class="alert alert-info" role="alert">
                    <i class="fas fa-info-circle me-2"></i>
                    <strong>Dicas importantes:</strong>
                    <ul class="mb-0 mt-2">
                        <li><strong>Garçom:</strong> Não precisa de senha, apenas código de 2 dígitos</li>
                        <li><strong>Recepção/Supervisor:</strong> Login e senha obrigatórios</li>
                        <li><strong>Código ID:</strong> Deve ser único (use o botão "Gerar Código")</li>
                    </ul>
                </div>

                <!-- Formulário -->
                <form asp-action="Cadastrar" method="post" class="needs-validation" novalidate>
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <!-- Nome -->
                        <div class="col-lg-6 mb-3">
                            <label asp-for="Nome" class="form-label">
                                <i class="fas fa-user me-2"></i>
                                Nome Completo *
                            </label>
                            <input asp-for="Nome" class="form-control"
                                   placeholder="Digite o nome completo"
                                   required />
                            <span asp-validation-for="Nome" class="text-danger small"></span>
                        </div>

                        <!-- Perfil -->
                        <div class="col-lg-6 mb-3">
                            <label asp-for="Perfil" class="form-label">
                                <i class="fas fa-id-badge me-2"></i>
                                Perfil *
                            </label>
                            <select asp-for="Perfil" class="form-select" onchange="perfilSelecionado()" required>
                                <option value="">Selecione o perfil</option>
                                @foreach (var perfil in ViewBag.PerfisDisponiveis as List<string>)
                                {
                                    <option value="@perfil">@perfil</option>
                                }
                            </select>
                            <span asp-validation-for="Perfil" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Login -->
                        <div class="col-lg-6 mb-3">
                            <label asp-for="Login" class="form-label">
                                <i class="fas fa-at me-2"></i>
                                Login *
                            </label>
                            <input asp-for="Login" class="form-control"
                                   placeholder="exemplo: joaosilva01"
                                   onblur="verificarLogin()"
                                   required />
                            <span asp-validation-for="Login" class="text-danger small"></span>
                            <div class="form-text">
                                Sugestão: nome + sobrenome + número (ex: anacosta01)
                            </div>
                        </div>

                        <!-- Código ID -->
                        <div class="col-lg-6 mb-3">
                            <label asp-for="CodigoID" class="form-label">
                                <i class="fas fa-hashtag me-2"></i>
                                Código ID *
                            </label>
                            <div class="input-group">
                                <input asp-for="CodigoID" class="form-control text-center fs-5 fw-bold"
                                       placeholder="00"
                                       maxlength="2"
                                       pattern="[0-9]{2}"
                                       style="letter-spacing: 0.3em;"
                                       required />
                                <button type="button" class="btn btn-outline-secondary" onclick="gerarCodigo()">
                                    <i class="fas fa-dice"></i>
                                </button>
                            </div>
                            <span asp-validation-for="CodigoID" class="text-danger small"></span>
                            <div class="form-text">
                                Código de 2 dígitos para identificação rápida
                            </div>
                        </div>
                    </div>

                    <!-- Seção de Senha (aparece apenas para Recepção/Supervisor) -->
                    <div id="secaoSenha" style="display: none;">
                        <hr>
                        <h6 class="text-primary mb-3">
                            <i class="fas fa-lock me-2"></i>
                            Configuração de Senha
                        </h6>

                        <div class="row">
                            <!-- Senha -->
                            <div class="col-lg-6 mb-3">
                                <label asp-for="Senha" class="form-label">
                                    <i class="fas fa-key me-2"></i>
                                    Senha *
                                </label>
                                <div class="input-group">
                                    <input asp-for="Senha" type="password" class="form-control"
                                           placeholder="Mínimo 6 caracteres" />
                                    <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('Senha')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="Senha" class="text-danger small"></span>
                            </div>

                            <!-- Confirmar Senha -->
                            <div class="col-lg-6 mb-3">
                                <label asp-for="ConfirmarSenha" class="form-label">
                                    <i class="fas fa-check-double me-2"></i>
                                    Confirmar Senha *
                                </label>
                                <div class="input-group">
                                    <input asp-for="ConfirmarSenha" type="password" class="form-control"
                                           placeholder="Digite a senha novamente" />
                                    <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('ConfirmarSenha')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="ConfirmarSenha" class="text-danger small"></span>
                            </div>
                        </div>
                    </div>

                    <!-- Botões de Ação -->
                    <hr>
                    <div class="row">
                        <div class="col-lg-6 mb-2">
                            <button type="submit" class="btn btn-success w-100">
                                <i class="fas fa-save me-2"></i>
                                Cadastrar Usuário
                            </button>
                        </div>
                        <div class="col-lg-6 mb-2">
                            <a href="/usuario" class="btn btn-secondary w-100">
                                <i class="fas fa-arrow-left me-2"></i>
                                Voltar à Lista
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Card de Preview -->
        <div class="card mt-4" id="previewCard" style="display: none;">
            <div class="card-header bg-info text-white">
                <h6 class="mb-0">
                    <i class="fas fa-eye me-2"></i>
                    Preview do Usuário
                </h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <strong>Nome:</strong> <span id="previewNome">-</span><br>
                        <strong>Login:</strong> <span id="previewLogin">-</span><br>
                        <strong>Perfil:</strong> <span id="previewPerfil">-</span>
                    </div>
                    <div class="col-md-6">
                        <strong>Código:</strong> <span id="previewCodigo" class="badge bg-dark fs-6">-</span><br>
                        <strong>Requer Senha:</strong> <span id="previewRequerSenha">-</span><br>
                        <strong>Permissões:</strong> <span id="previewPermissoes">-</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Controle de exibição da seção de senha
        function perfilSelecionado() {
            const perfil = document.querySelector('select[name="Perfil"]').value;
            const secaoSenha = document.getElementById('secaoSenha');
            const senhaInput = document.querySelector('input[name="Senha"]');
            const confirmarSenhaInput = document.querySelector('input[name="ConfirmarSenha"]');

            if (perfil === 'Recepção' || perfil === 'Supervisor') {
                secaoSenha.style.display = 'block';
                senhaInput.required = true;
                confirmarSenhaInput.required = true;
            } else {
                secaoSenha.style.display = 'none';
                senhaInput.required = false;
                confirmarSenhaInput.required = false;
                senhaInput.value = '';
                confirmarSenhaInput.value = '';
            }

            atualizarPreview();
        }

        // Gerar código único
        function gerarCodigo() {
            fetch('/usuario/gerarcodigo')
                .then(response => response.json())
                .then(data => {
                    document.querySelector('input[name="CodigoID"]').value = data.codigo;
                    atualizarPreview();
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao gerar código. Tente novamente.');
                });
        }

        // Toggle password visibility
        function togglePassword(fieldName) {
            const input = document.querySelector(`input[name="${fieldName}"]`);
            const icon = input.nextElementSibling.querySelector('i');

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Verificar se login já existe (implementação futura)
        function verificarLogin() {
            // Implementar verificação AJAX se necessário
            atualizarPreview();
        }

        // Atualizar preview
        function atualizarPreview() {
            const nome = document.querySelector('input[name="Nome"]').value;
            const login = document.querySelector('input[name="Login"]').value;
            const perfil = document.querySelector('select[name="Perfil"]').value;
            const codigo = document.querySelector('input[name="CodigoID"]').value;

            if (nome || login || perfil || codigo) {
                document.getElementById('previewCard').style.display = 'block';
                document.getElementById('previewNome').textContent = nome || '-';
                document.getElementById('previewLogin').textContent = login || '-';
                document.getElementById('previewPerfil').textContent = perfil || '-';
                document.getElementById('previewCodigo').textContent = codigo || '-';

                const requerSenha = (perfil === 'Recepção' || perfil === 'Supervisor') ? 'Sim' : 'Não';
                document.getElementById('previewRequerSenha').textContent = requerSenha;

                let permissoes = '';
                switch(perfil) {
                    case 'Garçom':
                        permissoes = 'Lançar consumos';
                        break;
                    case 'Recepção':
                        permissoes = 'Registrar hóspedes, cancelar lançamentos';
                        break;
                    case 'Supervisor':
                        permissoes = 'Acesso completo ao sistema';
                        break;
                    default:
                        permissoes = '-';
                }
                document.getElementById('previewPermissoes').textContent = permissoes;
            } else {
                document.getElementById('previewCard').style.display = 'none';
            }
        }

        // Máscaras e validações
        document.addEventListener('DOMContentLoaded', function() {
            // Máscara para código ID (apenas números)
            const codigoInput = document.querySelector('input[name="CodigoID"]');
            codigoInput.addEventListener('input', function() {
                this.value = this.value.replace(/[^0-9]/g, '');
                atualizarPreview();
            });

            // Auto-geração de login baseado no nome
            const nomeInput = document.querySelector('input[name="Nome"]');
            const loginInput = document.querySelector('input[name="Login"]');

            nomeInput.addEventListener('blur', function() {
                if (!loginInput.value && this.value) {
                    const nomes = this.value.toLowerCase().split(' ');
                    if (nomes.length >= 2) {
                        const sugestao = nomes[0] + nomes[1] + '01';
                        loginInput.value = sugestao.replace(/[^a-z0-9]/g, '');
                    }
                }
                atualizarPreview();
            });

            // Atualizar preview em tempo real
            document.querySelectorAll('input, select').forEach(element => {
                element.addEventListener('input', atualizarPreview);
                element.addEventListener('change', atualizarPreview);
            });
        });

        // Bootstrap form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}